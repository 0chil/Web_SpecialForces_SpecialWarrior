openapi: 3.0.0
info:
  title: specialforces
  version: '1.0'
  contact:
    name: Seong Cheol Park
    url: '-'
    email: gorae02@gmail.com
  description: Special Forces API documentation
servers:
  - url: 'https://spefor.ml'
paths:
  /api/v1/auth/login:
    post:
      summary: ''
      operationId: post-api-v1-auth-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      description: 로그인
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                client_id:
                  type: string
                user_id:
                  type: string
                password:
                  type: string
              required:
                - grant_type
                - client_id
                - user_id
                - password
        description: '앱에서 요청 시 grant_type="password", client_id="app" 입니다.'
      parameters: []
  /api/v1/test/testapi:
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: '{"success":true,"message":"API 접근 성공!"}'
        '401':
          description: Unauthorized (접근 권한 없음 - Token Invalid)
      operationId: get-api-v1-test-testapi
      description: API 사용 테스트
  /api/v1/test/testconnection:
    get:
      summary: ''
      tags: []
      responses:
        '200':
          description: '{"success":true,"message":"server all good!"}'
      operationId: get-api-v1-test-test2
      description: 서버 접속 테스트 API
    parameters: []
  /api/v1/member/register:
    parameters: []
    post:
      summary: ''
      operationId: post-api-v1-member-register
      responses:
        '200':
          description: OK
      description: 회원가입 API
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                password:
                  type: string
                email:
                  type: string
components:
  schemas: {}
  securitySchemes:
    access_token:
      type: http
      scheme: bearer
    user credentials:
      type: oauth2
      flows:
        password:
          tokenUrl: ''
          refreshUrl: ''
          scopes: {}
      description: ''
security:
  - oauthkey: []
